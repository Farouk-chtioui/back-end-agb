name: Build APK and Notify User

on:
  workflow_dispatch:  # Allows manual trigger via API
    inputs:
      appName:
        description: 'App Name'
        required: true
      appDesignId:
        description: 'App Design ID'
        required: true
      email:
        description: 'User Email'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu environment for building APKs

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java for Android build
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk

      # Cache Gradle for faster builds
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Run the build process
      - name: Build APK
        run: ./gradlew assembleRelease

      # Upload APK to GitHub Actions as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/app-release.apk

      # Send email using Mailgun
      - name: Notify user via Mailgun
        run: |
          curl -s --user "api:${{ secrets.MAILGUN_API_KEY }}" \
          https://api.mailgun.net/v3/sandbox5c7d6e26eb8a4cd188300c24a8bde0a1.mailgun.org/messages \
          -F from="Your App <no-reply@yourdomain.com>" \
          -F to="${{ github.event.inputs.email }}" \
          -F subject="Your APK is ready!" \
          -F text="Your APK for the app '${{ github.event.inputs.appName }}' has been built. You can download it from: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
